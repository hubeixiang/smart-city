package com.sct.service.database.mapper;

import com.sct.service.database.condition.QPaging;
import com.sct.service.database.condition.ScUserManagerCondition;
import com.sct.service.database.entity.ScManager;
import com.sct.service.database.entity.ScUser;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface ScManagerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sc_manager
     *
     * @mbg.generated Sat Nov 28 16:00:48 CST 2020
     */
    int deleteByPrimaryKey(String id);
    int deleteByPrimaryKeys(List<String> ids);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sc_manager
     *
     * @mbg.generated Sat Nov 28 16:00:48 CST 2020
     */
    int insert(ScManager record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sc_manager
     *
     * @mbg.generated Sat Nov 28 16:00:48 CST 2020
     */
    ScManager selectByPrimaryKey(String id);

    ScManager selectByLoginId(String value);

    ScManager selectByMobile(String value);

    ScManager selectByEmail(String value);

    ScManager selectBywxid(String value);

    ScManager selectByCardId(String value);

    ScManager selectByMixed(String value);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sc_manager
     *
     * @mbg.generated Sat Nov 28 16:00:48 CST 2020
     */
    List<ScManager> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sc_manager
     *
     * @mbg.generated Sat Nov 28 16:00:48 CST 2020
     */
    int updateByPrimaryKey(ScManager record);

    /**
     * 更新密码
     *
     * @param id
     * @param password
     * @return
     */
    int updatePasswordById(String id, String password);

    /**
     * 更新状态
     *
     * @param id
     * @param valid
     * @return
     */
    int updateIsValidById(String id, Integer valid);

    public int selectConditionCount(@Param("condition") ScUserManagerCondition condition);

    public List<ScManager> selectConditionPage(@Param("condition") ScUserManagerCondition condition, @Param("qPaging") QPaging qPaging);

    public List<ScManager> selectCondition(@Param("condition") ScUserManagerCondition condition);
}