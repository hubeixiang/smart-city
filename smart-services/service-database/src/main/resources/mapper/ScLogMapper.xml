<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sct.service.database.mapper.ScLogMapper">
  <resultMap id="BaseResultMap" type="com.sct.service.database.entity.ScLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 16 11:09:04 CST 2021.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="log_level" jdbcType="INTEGER" property="logLevel" />
    <result column="oper_id" jdbcType="INTEGER" property="operId" />
    <result column="oper_type" jdbcType="INTEGER" property="operType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="creator_id" jdbcType="INTEGER" property="creatorId" />
    <result column="dev_type" jdbcType="INTEGER" property="devType" />
    <result column="info" jdbcType="VARCHAR" property="info" />
  </resultMap>
  <sql id="allNonColumns">log_level, oper_id, oper_type, create_time, creator_id, dev_type, info</sql>
  <sql id="allColumns">id,<include refid="allNonColumns"></include></sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sc_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sct.service.database.entity.ScLog">
    insert into sc_log (<include refid="allNonColumns"></include>)
    values (#{logLevel,jdbcType=INTEGER}, #{operId,jdbcType=INTEGER},
      #{operType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=INTEGER},
      #{devType,jdbcType=INTEGER}, #{info,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.sct.service.database.entity.ScLog">
    update sc_log
    set log_level = #{logLevel,jdbcType=INTEGER},
      oper_id = #{operId,jdbcType=INTEGER},
      oper_type = #{operType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=INTEGER},
      dev_type = #{devType,jdbcType=INTEGER},
      info = #{info,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">

    select <include refid="allColumns"></include>
    from sc_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select <include refid="allColumns"></include>
    from sc_log
  </select>
  <sql id="queryCondition">
    <if test="condition.id !=null ''">
      and id = #{condition.id}
    </if>
    <if test="condition.logLevel !=null">
      and log_level = #{condition.logLevel}
    </if>
    <if test="condition.operId !=null ">
      and oper_id = #{condition.operId}
    </if>
    <if test="condition.operType !=null ">
      and oper_type = #{condition.operType}
    </if>
    <if test="condition.creatorId !=null">
      and creator_id = #{condition.creatorId}
    </if>
    <if test="condition.devType !=null ">
      and dev_type = #{condition.devType}
    </if>
    <if test="condition.createTimeStart !=null">
      and create_time >= #{condition.createTimeStart,jdbcType=TIMESTAMP}
    </if>
    <if test="condition.validStatus !=null">
      and create_time &lt; #{condition.createTimeEnd,jdbcType=TIMESTAMP}
    </if>
  </sql>
  <select id="selectConditionCount" resultType="int">
    select count(*) from sc_log
    <where>
      <include refid="queryCondition"></include>
    </where>
  </select>
  <select id="selectConditionPage" resultMap="BaseResultMap">
    select
    <include refid="allColumns"/>
    from sc_log
    <where>
      <include refid="queryCondition"/>
    </where>
    limit ${qPaging.startIndex},${qPaging.endIndex}
  </select>
  <select id="selectCondition" resultMap="BaseResultMap">
    select
    <include refid="allColumns"/>
    from sc_log
    <where>
      <include refid="queryCondition"/>
    </where>
  </select>
</mapper>