<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sct.service.database.mapper.ScOrganizationMapper">
    <resultMap id="BaseResultMap" type="com.sct.service.database.entity.ScOrganization">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat Jan 02 12:33:42 CST 2021.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="org_type" jdbcType="TINYINT" property="orgType"/>
        <result column="community_id" jdbcType="INTEGER" property="communityId"/>
        <result column="grid_id" jdbcType="INTEGER" property="gridId"/>
        <result column="grid_id_ext" jdbcType="INTEGER" property="gridIdExt"/>
        <result column="legal_name" jdbcType="VARCHAR" property="legalName"/>
        <result column="legal_card_id" jdbcType="VARCHAR" property="legalCardId"/>
        <result column="legal_mobile" jdbcType="VARCHAR" property="legalMobile"/>
        <result column="credit_code" jdbcType="VARCHAR" property="creditCode"/>
        <result column="business_code" jdbcType="VARCHAR" property="businessCode"/>
        <result column="register_status" jdbcType="INTEGER" property="registerStatus"/>
        <result column="register_date" jdbcType="DATE" property="registerDate"/>
        <result column="unregister_date" jdbcType="DATE" property="unregisterDate"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
        <result column="marker_status" jdbcType="TINYINT" property="markerStatus"/>
        <result column="longitude" jdbcType="REAL" property="longitude"/>
        <result column="latitude" jdbcType="REAL" property="latitude"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="creator_id" jdbcType="INTEGER" property="creatorId"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
    </resultMap>
    <sql id="allNonColumns"> name, org_type, community_id, grid_id, legal_name, legal_card_id, legal_mobile, credit_code, business_code, register_status, register_date, unregister_date, comment, marker_status, longitude, latitude, create_time, creator_id, modify_time </sql>
    <sql id="allColumns">id, <include refid="allNonColumns"></include> </sql>
    <sql id="allColumnsView">community_id_ext,grid_id_ext,<include refid="allColumns"></include> </sql>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sc_organization
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByPrimaryKeys">
        delete from sc_organization
        where id in (
        <foreach item="itemListValue" collection="ids" separator=",">
            #{itemListValue}
        </foreach>
        )}
    </delete>
    <insert id="insert" parameterType="com.sct.service.database.entity.ScOrganization">
        insert into sc_organization (<include refid="allColumns"></include>)
        values (#{id,jdbcType=INTEGER},#{name,jdbcType=VARCHAR}, #{orgType,jdbcType=TINYINT},
        #{communityId,jdbcType=INTEGER}, #{gridId,jdbcType=INTEGER}, #{legalName,jdbcType=VARCHAR},
        #{legalCardId,jdbcType=VARCHAR}, #{legalMobile,jdbcType=VARCHAR}, #{creditCode,jdbcType=VARCHAR},
        #{businessCode,jdbcType=VARCHAR}, #{registerStatus,jdbcType=INTEGER}, #{registerDate,jdbcType=DATE},
        #{unregisterDate,jdbcType=DATE}, #{comment,jdbcType=VARCHAR}, #{markerStatus,jdbcType=TINYINT},
        #{longitude,jdbcType=REAL}, #{latitude,jdbcType=REAL}, #{createTime,jdbcType=TIMESTAMP},
        #{creatorId,jdbcType=INTEGER}, #{modifyTime,jdbcType=TIMESTAMP})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.sct.service.database.entity.ScOrganization">
    update sc_organization
    set name = #{name,jdbcType=VARCHAR},
      org_type = #{orgType,jdbcType=TINYINT},
      community_id = #{communityId,jdbcType=INTEGER},
      grid_id = #{gridId,jdbcType=INTEGER},
      legal_name = #{legalName,jdbcType=VARCHAR},
      legal_card_id = #{legalCardId,jdbcType=VARCHAR},
      legal_mobile = #{legalMobile,jdbcType=VARCHAR},
      credit_code = #{creditCode,jdbcType=VARCHAR},
      business_code = #{businessCode,jdbcType=VARCHAR},
      register_status = #{registerStatus,jdbcType=INTEGER},
      register_date = #{registerDate,jdbcType=DATE},
      unregister_date = #{unregisterDate,jdbcType=DATE},
      comment = #{comment,jdbcType=VARCHAR},
      marker_status = #{markerStatus,jdbcType=TINYINT},
      longitude = #{longitude,jdbcType=REAL},
      latitude = #{latitude,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=INTEGER},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="allColumnsView"></include>
        from sc_organization
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="allColumnsView"></include>
        from sc_organization
    </select>
    <sql id="queryCondition">
        <if test="condition.communityIds !=null and condition.communityIds.size() >0">
            and community_id in (
            <foreach item="itemListValue" collection="condition.communityIds" separator=",">
                #{itemListValue}
            </foreach>
            )
        </if>
        <if test="condition.gridIds !=null and condition.gridIds.size() >0">
            and grid_id in (
            <foreach item="itemListValue" collection="condition.gridIds" separator=",">
                #{itemListValue}
            </foreach>
            )
        </if>
        <if test="condition.orgType !=null ">
            and org_type = #{condition.orgType}
        </if>
        <if test="condition.name !=null and condition.name != ''">
            and name like '%${condition.name}%'
        </if>
        <if test="condition.registerStatusList !=null and condition.registerStatusList.size() >0">
            and register_status in (
            <foreach item="itemListValue" collection="condition.registerStatusList" separator=",">
                #{itemListValue}
            </foreach>
            )
        </if>
    </sql>
    <select id="selectConditionCount" resultType="int">
        select count(*) from sc_organization
        <where>
            <include refid="queryCondition"></include>
        </where>
    </select>
    <select id="selectConditionPage" resultMap="BaseResultMap">
        select
        <include refid="allColumnsView"/>
        from v_sc_organization
        <where>
            <include refid="queryCondition"/>
        </where>
        limit ${qPaging.startIndex},${qPaging.endIndex}
    </select>
    <select id="selectCondition" resultMap="BaseResultMap">
        select
        <include refid="allColumnsView"/>
        from v_sc_organization
        <where>
            <include refid="queryCondition"/>
        </where>
    </select>
    <update id="updateRegisterStatus">
        update sc_organization set registerStatus = #{registerStatus,jdbcType=INTEGER} where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>