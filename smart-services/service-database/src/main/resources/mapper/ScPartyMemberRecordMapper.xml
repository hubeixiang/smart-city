<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sct.service.database.mapper.ScPartyMemberRecordMapper">
    <resultMap id="BaseResultMap" type="com.sct.service.database.entity.ScPartyMemberRecord">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Feb 16 11:09:04 CST 2021.
        -->
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="party_member_id" jdbcType="INTEGER" property="partyMemberId"/>
        <result column="record_date" jdbcType="DATE" property="recordDate"/>
        <result column="record_type" jdbcType="TINYINT" property="recordType"/>
        <result column="record_abstract" jdbcType="VARCHAR" property="recordAbstract"/>
        <result column="record_detail" jdbcType="VARCHAR" property="recordDetail"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="creator_id" jdbcType="INTEGER" property="creatorId"/>
        <result column="creator_name" jdbcType="VARCHAR" property="creatorName"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
    </resultMap>
    <sql id="allColumns">id,party_member_id, record_date, record_type, record_abstract, record_detail, create_time, creator_id, creator_name, modify_time</sql>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sc_party_member_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByPrimaryKeys">
        delete from sc_party_member_record
        where id in (
        <foreach item="itemListValue" collection="ids" separator=",">
            #{itemListValue}
        </foreach>
        )
    </delete>
    <delete id="deleteByBusinessKey">
        delete from sc_party_member_record
        where party_member_id = #{partyMemberId,jdbcType=INTEGER}
        <if test="recordDate!=null">
            and record_date = #{recordDate,jdbcType=DATE}
        </if>
    </delete>
    <select id="selectDocumentary" resultMap="BaseResultMap">
        select * from sc_party_member_record where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectDocumentaryAll" resultMap="BaseResultMap">
        select * from sc_party_member_record where party_member_id = #{partyMemberId,jdbcType=INTEGER}
        <if test="recordType!=null">
            and record_type = #{recordType,jdbcType=TINYINT}
        </if>
        order by record_date,record_type
    </select>
    <update id="updateByPrimaryKey" parameterType="com.sct.service.database.entity.ScPartyMemberRecord">
       update sc_party_member_record set
        party_member_id = #{partyMemberId,jdbcType=INTEGER},
        record_date = #{recordDate,jdbcType=DATE},
        record_type = #{recordType,jdbcType=TINYINT},
        record_abstract = #{recordAbstract,jdbcType=VARCHAR},
        record_detail = #{recordDetail,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        creator_id = #{creatorId,jdbcType=INTEGER},
        creator_name =  #{creatorName,jdbcType=VARCHAR},
        modify_time = #{modifyTime,jdbcType=TIMESTAMP}
       where id = #{id,jdbcType=INTEGER}
    </update>
    <insert id="insert" parameterType="com.sct.service.database.entity.ScPartyMemberRecord">
    insert into sc_party_member_record (<include refid="allColumns"></include>)
    values (#{id,jdbcType=INTEGER},#{partyMemberId,jdbcType=INTEGER}, #{recordDate,jdbcType=DATE}, #{recordType,jdbcType=TINYINT},
      #{recordAbstract,jdbcType=VARCHAR}, #{recordDetail,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{creatorId,jdbcType=INTEGER}, #{creatorName,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="allColumns"></include>
        from sc_party_member_record
    </select>

    <sql id="queryCondition">
        <if test="condition.partyMemberId !=null">
            and party_member_id >= #{condition.partyMemberId,jdbcType=INTEGER}
        </if>
        <if test="condition.recordDateStart !=null">
            and record_date >= #{condition.recordDateStart,jdbcType=TIMESTAMP}
        </if>
        <if test="condition.recordDateEnd !=null">
            and record_date &lt; #{condition.recordDateEnd,jdbcType=TIMESTAMP}
        </if>
        <if test="condition.recordTypes != null and con.recordTypes.size() > 0">
            and record_type in (
            <foreach item="itemListValue" collection="condition.recordTypes" separator=",">
                #{itemListValue}
            </foreach>
            )
        </if>
    </sql>
    <select id="selectConditionCount" resultType="int">
        select count(*) from sc_party_member_record
        <where>
            <include refid="queryCondition"></include>
        </where>
    </select>
    <select id="selectConditionPage" resultMap="BaseResultMap">
        select
        <include refid="allColumns"/>
        from sc_party_member_record
        <where>
            <include refid="queryCondition"/>
        </where>
        limit ${qPaging.startIndex},${qPaging.endIndex}
    </select>
    <select id="selectCondition" resultMap="BaseResultMap">
        select
        <include refid="allColumns"/>
        from sc_party_member_record
        <where>
            <include refid="queryCondition"/>
        </where>
    </select>
</mapper>