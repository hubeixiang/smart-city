<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sct.service.database.mapper.ScCommunityLeaderMapper">
    <resultMap id="BaseResultMap" type="com.sct.service.database.entity.ScCommunityLeader">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Feb 16 11:09:04 CST 2021.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="party_post" jdbcType="TINYINT" property="partyPost"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="pic_url" jdbcType="VARCHAR" property="picUrl"/>
        <result column="order" jdbcType="TINYINT" property="order"/>
        <result column="community_id" jdbcType="INTEGER" property="communityId"/>
        <result column="term" jdbcType="VARCHAR" property="term"/>
        <result column="term_begin" jdbcType="DATE" property="termBegin"/>
        <result column="term_end" jdbcType="DATE" property="termEnd"/>
        <result column="office_statues" jdbcType="TINYINT" property="officeStatues"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="creator_id" jdbcType="INTEGER" property="creatorId"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
    </resultMap>
    <sql id="allNonColumns">name, party_post, mobile, pic_url, order, community_id, term, term_begin, term_end, office_statues, create_time, creator_id, modify_time</sql>
    <sql id="allColumns">id,
        <include refid="allNonColumns"></include>
    </sql>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sc_community_leader
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.sct.service.database.entity.ScCommunityLeader">
        insert into sc_community_leader (<include refid="allNonColumns"></include> )
        values (#{name,jdbcType=VARCHAR}, #{partyPost,jdbcType=TINYINT},
        #{mobile,jdbcType=VARCHAR}, #{picUrl,jdbcType=VARCHAR}, #{order,jdbcType=TINYINT},
        #{communityId,jdbcType=INTEGER}, #{term,jdbcType=VARCHAR}, #{termBegin,jdbcType=DATE},
        #{termEnd,jdbcType=DATE}, #{officeStatues,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP},
        #{creatorId,jdbcType=INTEGER}, #{modifyTime,jdbcType=TIMESTAMP})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.sct.service.database.entity.ScCommunityLeader">
    update sc_community_leader
    set name = #{name,jdbcType=VARCHAR},
      party_post = #{partyPost,jdbcType=TINYINT},
      mobile = #{mobile,jdbcType=VARCHAR},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      order = #{order,jdbcType=TINYINT},
      community_id = #{communityId,jdbcType=INTEGER},
      term = #{term,jdbcType=VARCHAR},
      term_begin = #{termBegin,jdbcType=DATE},
      term_end = #{termEnd,jdbcType=DATE},
      office_statues = #{officeStatues,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=INTEGER},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="allColumns"></include>
        from sc_community_leader
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="allColumns"></include>
        from sc_community_leader
    </select>
    <sql id="queryCondition">
    </sql>
    <select id="selectConditionCount" resultType="int">
        select count(*) from sc_community_leader
        <where>
            <include refid="queryCondition"></include>
        </where>
    </select>
    <select id="selectConditionPage" resultMap="BaseResultMap">
        select
        <include refid="allColumns"/>
        from sc_community_leader
        <where>
            <include refid="queryCondition"/>
        </where>
        limit ${qPaging.startIndex},${qPaging.endIndex}
    </select>
    <select id="selectCondition" resultMap="BaseResultMap">
        select
        <include refid="allColumns"/>
        from sc_community_leader
        <where>
            <include refid="queryCondition"/>
        </where>
    </select>
</mapper>