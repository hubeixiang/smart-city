<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sct.service.database.mapper.ScRoleMapper">
  <resultMap id="BaseResultMap" type="com.sct.service.database.entity.ScRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 16 11:09:04 CST 2021.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_type" jdbcType="BIT" property="roleType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="creator_id" jdbcType="INTEGER" property="creatorId" />
    <result column="creator_name" jdbcType="VARCHAR" property="creatorName"/>
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="community_id" jdbcType="INTEGER" property="communityId" />
    <result column="grid_level" jdbcType="BIT" property="gridLevel" />
  </resultMap>
  <sql id="allNonColumns">role_name, role_type, create_time,  creator_id, creator_name, modify_time, comment, community_id, grid_level</sql>
  <sql id="allColumns">id,<include refid="allNonColumns"></include></sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sc_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sct.service.database.entity.ScRole">
    insert into sc_role (<include refid="allNonColumns"></include>
      )
    values (#{roleName,jdbcType=VARCHAR}, #{roleType,jdbcType=BIT},
      #{createTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=INTEGER}, #{creatorName,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP},
      #{comment,jdbcType=VARCHAR}, #{communityId,jdbcType=INTEGER}, #{gridLevel,jdbcType=BIT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.sct.service.database.entity.ScRole">
    update sc_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_type = #{roleType,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=INTEGER},
      creator_name = #{creatorName,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      comment = #{comment,jdbcType=VARCHAR},
      community_id = #{communityId,jdbcType=INTEGER},
      grid_level = #{gridLevel,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="allColumns"></include>
    from sc_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="allColumns"></include>
    from sc_role
  </select>
  <sql id="queryCondition">
    <if test="condition.userName !=null and condition.userName != ''">
      and user_name like '%${condition.userName}%'
    </if>
    <if test="condition.sex !=null">
      and sex = #{condition.sex}
    </if>
    <if test="condition.mobile !=null and condition.mobile != ''">
      and mobile = #{condition.mobile}
    </if>
    <if test="condition.email !=null and condition.email != ''">
      and email = #{condition.email}
    </if>
    <if test="condition.cardId !=null and condition.cardId !=''">
      and card_Id = #{condition.cardId}
    </if>
    <if test="condition.userTypes !=null and condition.userTypes.size() >0">
      and user_type in (
      <foreach item="itemListValue" collection="condition.userTypes" separator=",">
        #{itemListValue}
      </foreach>
      )
    </if>
    <if test="condition.validStatus !=null">
      <choose>
        <when test="condition.validStatus == true">
          and valid_status = 1
        </when>
        <when test="condition.validStatus == false">
          and valid_status = 0
        </when>
      </choose>
    </if>
  </sql>
  <select id="selectConditionCount" resultType="int">
    select count(*) from sc_user
    <where>
      <include refid="queryCondition"></include>
    </where>
  </select>
  <select id="selectConditionPage" resultMap="BaseResultMap">
    select
    <include refid="allColumns"/>
    from sc_user
    <where>
      <include refid="queryCondition"/>
    </where>
    limit ${qPaging.startIndex},${qPaging.endIndex}
  </select>
  <select id="selectCondition" resultMap="BaseResultMap">
    select
    <include refid="allColumns"/>
    from sc_user
    <where>
      <include refid="queryCondition"/>
    </where>
  </select>
</mapper>